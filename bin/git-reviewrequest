#!/usr/bin/env ruby

# create a github review request for the current branch
# usage:
# git reviewrequest

require File.join(File.dirname(__FILE__), '..', 'lib', 'socialcast-git-extensions.rb')
require File.join(File.dirname(__FILE__), '..', 'lib', 'socialcast-git-extensions', 'string_ext.rb')
include Socialcast::Git
include Socialcast::Github

branch = current_branch
username = `git config -z --global --get github.user`.strip
password = HighLine.ask("Github password: ") { |q| q.echo = false }

run_cmd 'git update'

description = ""
if index = (ARGV.index('-d') || ARGV.index('--description'))
  description = ARGV[index + 1]
  if description.nil?
    puts "Usage: #git-reviewrequest -d <description>"
    exit 1
  end
else
  require 'tempfile'
  Tempfile.open('reviewrequest.md') do |f|
    helper_tip = <<-EOS.dedent
      # Describe your pull request
      # Use GitHub flavored Markdown http://github.github.com/github-flavored-markdown/
      # Why not include a screenshot? Format is ![title](url)
    EOS
    f << "\n\n#{helper_tip}"
    f.flush

    editor = ENV['EDITOR'] || 'vi'
    flags = case editor
    when 'mate', 'emacs'
      '-w'
    when 'mvim'
      '-f'
    else
      ''
    end
    pid = fork { exec "#{editor} #{flags} #{f.path}" }
    Process.waitpid(pid)
    description = File.read(f.path)
    description = description.gsub(/^\#.*/, '').chomp.strip
  end
end

short_description = description.split("\n").first(5).join("\n")
stats = `git diff --stat master...#{branch}`

repo = `git config -z --get remote.origin.url`.strip
# ex: git@github.com:socialcast/socialcast-git-extensions.git
repo = repo.scan(/:(.+\/.+)\./).first.first
url = create_pull_request username, password, branch, repo, description

if url
  review_message = ["@SocialcastDevelopers #reviewrequest for #{branch} #scgitx", short_description, stats].join("\n\n")
  share review_message, {:url => url, :message_type => 'review_request'}
else
  HighLine.say "Skipping socialcast announcement"
  exit 1
end
