#!/usr/bin/env ruby

#prune branches that have been merged into master from the repo
#usage -r --remote to prune remote branches

require File.join(File.dirname(__FILE__), '..', 'lib', 'socialcast-git-extensions.rb')
include Socialcast::Git

remote = ARGV.delete("--remote") || ARGV.delete("-r")

run_cmd "git checkout master"
run_cmd "git pull"

HighLine.say "Deleting <%= color('#{remote ? 'remote' : 'local'}', :green) %> branches that have been merged into master"
branches(:merged => true).each do |branch|
  run_cmd "git branch -d #{branch}"
end

if remote
  branches(:merged => true, :remote => true).each do |branch|
    run_cmd "grb rm #{branch}"
  end
end
